name: Tests

on:
  workflow_dispatch:

# One active job per PR, cancel older ones on push
concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

# NOTE: because matrix cannot easily be shared across jobs, it should be copied to each job
#       when adding a new job / changing the matrix, make sure to update all jobs
jobs:
  integration_tests:
    name: Caching ${{ matrix.bazel_cache }}
    runs-on: namespace-profile-macos-small
    strategy:
      fail-fast: false
      matrix:
        # bazel_version: [6.5.0, 7.1.0]
        # xcode_version: [15.2]
        # virtual_frameworks: [true, false]
        bazel_cache: [true, false]
    env:
      XCODE_VERSION: 15.2
      USE_BAZEL_VERSION: 7.1.0
    steps:
      - uses: actions/checkout@v4
      - name: Preflight Env
        run: .github/workflows/preflight_env.sh
      # - if: matrix.virtual_frameworks
      #   name: Add vfs config
      #   run: |
      #     echo "build --config=vfs" >> user.bazelrc

      - run: |
          touch /tmp/bazel-cache.bazelrc

      - if: matrix.bazel_cache
        name: Build nsc
        run: |
          curl -fsSL https://get.namespace.so/cloud/install.sh | sh -s -- --version 0.0.386

      - if: matrix.bazel_cache
        name: Set up Bazel cache
        run: |
          nsc bazel cache setup --bazelrc=/tmp/bazel-cache.bazelrc

      - name: non-iOS tests
        run: |
          bazelisk --bazelrc=/tmp/bazel-cache.bazelrc \
            test \
            --profile=cache-${{ matrix.bazel_cache }}-profile.gz
            -- \
            //... \
            -//tests/ios/...

          # Clean up after simctl (https://github.com/bazelbuild/rules_apple/issues/185)
          pgrep Simulator | xargs kill || true

      - name: iOS tests
        run: |
          # Create single ephemeral iOS sim
          SIMULATOR_UDID=$(python3 tools/tests/prepare_sim.py)

          bazelisk --bazelrc=/tmp/bazel-cache.bazelrc \
            test \
            --config=ios \
            --test_arg=--destination=platform=ios_simulator,id=$SIMULATOR_UDID \
            -- \
            //tests/ios/...
      - uses: actions/upload-artifact@v4
        with:
          name: cache-${{ matrix.bazel_cache }}-profile.gz
          path: cache-${{ matrix.bazel_cache }}-profile.gz
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: bazel-testlogs
          path: bazel-testlogs

  # build_arm64_simulator:
  #   name: arm64 Simulator (Bazel ${{ matrix.bazel_version }} / Xcode ${{ matrix.xcode_version }})
  #   runs-on: namespace-profile-macos-small
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       bazel_version: [6.5.0, 7.1.0]
  #       xcode_version: [15.2]
  #   env:
  #     XCODE_VERSION: ${{ matrix.xcode_version }}
  #     USE_BAZEL_VERSION: ${{ matrix.bazel_version }}
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Preflight Env
  #       run: .github/workflows/preflight_env.sh
  #     - name: Build nsc
  #       run: |
  #         curl -fsSL https://get.namespace.so/cloud/install.sh | sh -s -- --version 0.0.386

  #     - name: Set up Bazel cache
  #       run: |
  #         nsc bazel cache setup --bazelrc=/tmp/bazel-cache.bazelrc
  #     - name: Build and Test
  #       run: |
  #         bazelisk --bazelrc=/tmp/bazel-cache.bazelrc \
  #           build \
  #           --config=vfs \
  #           --features apple.arm64_simulator_use_device_deps \
  #           --ios_multi_cpus=sim_arm64  \
  #           -- \
  #           //... \
  #           -//tests/ios/...

  #         # Misc issues:
  #         #   - Fails on a non fat framework for //tests/ios/unit-test/test-imports-app/
  #         bazelisk --bazelrc=/tmp/bazel-cache.bazelrc \
  #           build \
  #           --config=ios \
  #           --config=vfs \
  #           --features apple.arm64_simulator_use_device_deps \
  #           --ios_multi_cpus=sim_arm64 \
  #           -- \
  #           //tests/ios/... \
  #           -//tests/ios/unit-test/test-imports-app/...
  #     - uses: actions/upload-artifact@v4
  #       if: failure()
  #       with:
  #         name: bazel-testlogs
  #         path: bazel-testlogs

  # buildifier-and-docs:
  #   name: Buildifier and Documentation (Bazel ${{ matrix.bazel_version }} / Xcode ${{ matrix.xcode_version }})
  #   runs-on: namespace-profile-macos-small
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       bazel_version: [7.1.0] # Only run on latest Bazel version as stardoc changes between versions and produces different results
  #       xcode_version: [15.2]
  #   env:
  #     XCODE_VERSION: ${{ matrix.xcode_version }}
  #     USE_BAZEL_VERSION: ${{ matrix.bazel_version }}
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Preflight Env
  #       run: .github/workflows/preflight_env.sh
  #       # Note: we need to pass the absolute to the Bazel run
  #     - name: buildifier
  #       run: |
  #         find $PWD -type f \( -name 'WORKSPACE' -o -name '*.bzl' -o -name '*.bazel' \) | xargs bazel run //:buildifier -- -lint=fix
  #         git diff --exit-code
  #     - name: Build nsc
  #       run: |
  #         curl -fsSL https://get.namespace.so/cloud/install.sh | sh -s -- --version 0.0.386

  #     - name: Set up Bazel cache
  #       run: |
  #         nsc bazel cache setup --bazelrc=/tmp/bazel-cache.bazelrc
  #     - name: Check docs
  #       run: |
  #         bazelisk \
  #           --bazelrc=/tmp/bazel-cache.bazelrc \
  #           run \
  #           //docs
  #         git diff --exit-code docs
  #     - uses: actions/upload-artifact@v4
  #       if: failure()
  #       with:
  #         name: bazel-testlogs
  #         path: bazel-testlogs

  # xcodeproj_tests:
  #   name: Legacy xcodeproj tests (Bazel ${{ matrix.bazel_version }} / Xcode ${{ matrix.xcode_version }})
  #   runs-on: namespace-profile-macos-small
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       bazel_version: [6.5.0] # Only test on a single Bazel version as fixtures require updates across Bazel verisons
  #       xcode_version: [15.2]
  #   env:
  #     XCODE_VERSION: ${{ matrix.xcode_version }}
  #     USE_BAZEL_VERSION: ${{ matrix.bazel_version }}
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Preflight Env
  #       run: .github/workflows/preflight_env.sh --no-bzlmod
  #     - name: Run tests
  #       run: ./tests/xcodeproj-tests.sh --run && ./tests/test-tests.sh
  #     - uses: actions/upload-artifact@v4
  #       if: failure()
  #       with:
  #         name: bazel-testlogs
  #         path: bazel-testlogs

  # lldb_ios_tests_xcode:
  #   name: LLDB tests (Bazel ${{ matrix.bazel_version }} / Xcode ${{ matrix.xcode_version }})
  #   runs-on: namespace-profile-macos-small
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       bazel_version: [6.5.0, 7.1.0]
  #       xcode_version: [15.2]
  #   env:
  #     XCODE_VERSION: ${{ matrix.xcode_version }}
  #     USE_BAZEL_VERSION: ${{ matrix.bazel_version }}
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Preflight Env
  #       run: .github/workflows/preflight_env.sh
  #     - name: Run tests
  #       run: |
  #         bazelisk test \
  #           --config=ios_lldb_test \
  #           -- \
  #           tests/ios/lldb/app:objc_app_po_test \
  #           tests/ios/lldb/app:objc_app_variable_test
  #     - uses: actions/upload-artifact@v4
  #       if: failure()
  #       with:
  #         name: bazel-testlogs
  #         path: bazel-testlogs

  # multi_arch_support:
  #   # i386 was removed on rules_apple 3.x.x - this test case needs reworking
  #   # to exemplify fat binaries on the latest version
  #   name: iOS App Multiple Architectures (Bazel ${{ matrix.bazel_version }} / Xcode ${{ matrix.xcode_version }})
  #   runs-on: namespace-profile-macos-small
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       bazel_version: [6.5.0, 7.1.0]
  #       xcode_version: [15.2]
  #   env:
  #     XCODE_VERSION: ${{ matrix.xcode_version }}
  #     USE_BAZEL_VERSION: ${{ matrix.bazel_version }}
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Preflight Env
  #       run: .github/workflows/preflight_env.sh
  #     - name: Build nsc
  #       run: |
  #         curl -fsSL https://get.namespace.so/cloud/install.sh | sh -s -- --version 0.0.386

  #     - name: Set up Bazel cache
  #       run: |
  #         nsc bazel cache setup --bazelrc=/tmp/bazel-cache.bazelrc
  #     - name: Build App
  #       run: |
  #         bazelisk \
  #           --bazelrc=/tmp/bazel-cache.bazelrc \
  #           build \
  #           --config=ios_multi_arch_test \
  #           -- \
  #           tests/ios/app/App
